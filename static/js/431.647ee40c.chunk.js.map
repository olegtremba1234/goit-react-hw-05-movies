{"version":3,"file":"static/js/431.647ee40c.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAc,mCAAG,oGACIF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD5C,cACbE,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,qDAKdC,EAAc,mCAAG,WAAMC,GAAN,uFACIP,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,4DAA6FM,IADjG,cACbJ,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,sDAKdG,EAAiB,mCAAG,WAAMC,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKjBM,EAAS,mCAAG,WAAMD,GAAN,uFACST,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CR,EAA9C,oBADT,cACRE,EADQ,yBAEPA,EAASC,KAAKO,MAFP,2CAAH,sDAKTC,EAAY,mCAAG,WAAMH,GAAN,uFACKT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CR,EAA9C,2BADL,cACXE,EADW,yBAEVA,EAASC,KAAKC,SAFJ,2CAAH,sDAKZQ,EAAQ,CACVX,eAAAA,EACAI,eAAAA,EACAE,kBAAAA,EACAE,UAAAA,EACAE,aAAAA,GAGJ,K,kHCOA,UAxCa,WACT,IAAOH,GAAWK,EAAAA,EAAAA,MAAXL,QACP,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,mCAAG,2FAClBF,GAAW,GADO,kBAGKL,EAAAA,EAAAA,UAAgBJ,GAHrB,OAGRE,EAHQ,OAIdK,EAAQL,GAJM,gDAMdU,QAAQC,IAAR,MANc,yBAQdJ,GAAW,GARG,4EAAH,qDAWnBE,GACH,GAAE,CAACX,KAGA,2BACGQ,IAAW,SAAC,IAAD,KACZ,wBACGN,EAAKY,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,MAAM,QACNC,IAAK,kCAAoCF,EAAMG,aAC/CC,IAAKJ,EAAMK,iBAEb,uBAAIL,EAAMM,QACV,uCAAeN,EAAMO,eAPdP,EAAMQ,GADF,QAc1B,C,4CC7BD,IAZe,WACX,OAAO,SAAC,KAAD,CACHC,SAAS,EACTC,OAAO,KACPT,MAAM,KACNU,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAE5D,C","sources":["API/API.js","Pages/Cast/Cast.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '4b8864cf5207c2132295f1e95f786e7c'\n\nconst fetchTrendings = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nconst fetchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\n    return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nconst fetchCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n    const response =await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};\n\nconst fetch = {\n    fetchTrendings,\n    fetchByKeyword,\n    fetchMovieDetails,\n    fetchCast,\n    fetchReviews,\n};\n\nexport default fetch;","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport fetch from \"API/API\";\nimport Loader from \"components/Loader/Loader\";\n\nconst Cast = () => {\n    const {movieId} = useParams()\n    const [cast, setCast] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        const onCastOfMovie = async () => {\n            setLoading(true)\n            try {\n                const cast = await fetch.fetchCast(movieId)\n                setCast(cast)\n            }catch (error) {\n                console.log(error)\n            }finally {\n                setLoading(false)\n            }\n        }\n        onCastOfMovie()\n    }, [movieId])\n\n    return (\n        <div>\n          {loading && <Loader />}\n          <ul>\n            {cast.map(actor => (\n              <li key={actor.id}>\n                <img\n                  width=\"200px\"\n                  src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n                  alt={actor.original_name}\n                />\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      );\n};\n\nexport default Cast;","import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return <Vortex\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n}\n    \nexport default Loader;"],"names":["axios","API_KEY","fetchTrendings","response","data","results","fetchByKeyword","keyword","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","fetch","useParams","useState","setCast","loading","setLoading","useEffect","onCastOfMovie","console","log","map","actor","width","src","profile_path","alt","original_name","name","character","id","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}