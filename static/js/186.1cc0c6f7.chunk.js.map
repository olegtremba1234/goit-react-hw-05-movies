{"version":3,"file":"static/js/186.1cc0c6f7.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAc,mCAAG,oGACIF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD5C,cACbE,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,qDAKdC,EAAc,mCAAG,WAAMC,GAAN,uFACIP,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,4DAA6FM,IADjG,cACbJ,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,sDAKdG,EAAiB,mCAAG,WAAMC,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKjBM,EAAS,mCAAG,WAAMD,GAAN,uFACST,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CR,EAA9C,oBADT,cACRE,EADQ,yBAEPA,EAASC,KAAKO,MAFP,2CAAH,sDAKTC,EAAY,mCAAG,WAAMH,GAAN,uFACKT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CR,EAA9C,2BADL,cACXE,EADW,yBAEVA,EAASC,KAAKC,SAFJ,2CAAH,sDAKZQ,EAAQ,CACVX,eAAAA,EACAI,eAAAA,EACAE,kBAAAA,EACAE,UAAAA,EACAE,aAAAA,GAGJ,K,4CCxBA,IAZe,WACX,OAAO,SAAC,KAAD,CACHE,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAE5D,C,kHCkCD,UAzCgB,WACZ,IAAQX,GAAYY,EAAAA,EAAAA,MAAZZ,QACR,GAA8Ba,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,2FACpBF,GAAW,GADS,kBAGKb,EAAAA,EAAAA,aAAmBJ,GAHxB,OAGVoB,EAHU,OAIhBL,EAAWK,GAJK,gDAMhBC,QAAQC,IAAR,MANgB,yBAQhBL,GAAW,GARK,4EAAH,qDAWrBE,GACH,GAAE,CAACnB,KAGA,gCACDgB,IAAW,SAAC,IAAD,IACXF,EAAQS,QACP,0BACE,wBACGT,EAAQU,KAAI,SAAAJ,GAAM,OACjB,2BACE,qCAAaA,EAAOK,WACpB,uBAAIL,EAAOM,YAFJN,EAAOO,GADC,SASvB,wEAIP,C","sources":["API/API.js","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '4b8864cf5207c2132295f1e95f786e7c'\n\nconst fetchTrendings = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nconst fetchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\n    return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nconst fetchCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n    const response =await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};\n\nconst fetch = {\n    fetchTrendings,\n    fetchByKeyword,\n    fetchMovieDetails,\n    fetchCast,\n    fetchReviews,\n};\n\nexport default fetch;","import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return <Vortex\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n}\n    \nexport default Loader;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"components/Loader/Loader\";\nimport fetch from \"API/API\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        const onActorsOfMovie = async () => {\n            setLoading(true)\n            try{\n                const review = await fetch.fetchReviews(movieId)\n                setReviews(review)\n            }catch (error){\n                console.log(error)\n            }finally {\n                setLoading(false)\n            }\n        }\n        onActorsOfMovie();\n    }, [movieId])\n\n    return(\n        <>\n      {loading && <Loader />}\n      {reviews.length ? (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n    )\n}\n\nexport default Reviews"],"names":["axios","API_KEY","fetchTrendings","response","data","results","fetchByKeyword","keyword","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","fetch","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","onActorsOfMovie","review","console","log","length","map","author","content","id"],"sourceRoot":""}