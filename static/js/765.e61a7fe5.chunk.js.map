{"version":3,"file":"static/js/765.e61a7fe5.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAc,mCAAG,oGACIF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD5C,cACbE,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,qDAKdC,EAAc,mCAAG,WAAMC,GAAN,uFACIP,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,4DAA6FM,IADjG,cACbJ,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,sDAKdG,EAAiB,mCAAG,WAAMC,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKjBM,EAAS,mCAAG,WAAMD,GAAN,uFACST,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CR,EAA9C,oBADT,cACRE,EADQ,yBAEPA,EAASC,KAAKO,MAFP,2CAAH,sDAKTC,EAAY,mCAAG,WAAMH,GAAN,uFACKT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CR,EAA9C,2BADL,cACXE,EADW,yBAEVA,EAASC,KAAKC,SAFJ,2CAAH,sDAKZQ,EAAQ,CACVX,eAAAA,EACAI,eAAAA,EACAE,kBAAAA,EACAE,UAAAA,EACAE,aAAAA,GAGJ,K,kHCLA,UA5BiB,WACb,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAkB,mCAAG,2FACvBF,GAAW,GADY,kBAGSL,EAAAA,EAAAA,iBAHT,OAGbQ,EAHa,OAInBL,EAASK,GAJU,gDAMnBC,QAAQC,IAAR,MANmB,yBAQnBL,GAAW,GARQ,4EAAH,qDAWxBE,GACH,GAAC,KAGE,6BACI,2CACCL,IAAS,SAAC,IAAD,CAAYA,MAAOA,IAC5BE,IAAW,SAAC,IAAD,MAGvB,C,oDCFD,IA1BmB,SAAC,GAAe,IAAbF,EAAY,EAAZA,MACdS,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGV,GACCA,EAAMW,KAAI,SAAAC,GAAI,OACZ,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,SACGG,EAAKK,SAFDL,EAAKE,GADF,KASrB,C,4CCJD,IAZe,WACX,OAAO,SAAC,KAAD,CACHI,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAE5D,C","sources":["API/API.js","Pages/Home/Home.jsx","components/EditorList/EditorList.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '4b8864cf5207c2132295f1e95f786e7c'\n\nconst fetchTrendings = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nconst fetchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\n    return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nconst fetchCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n    const response =await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};\n\nconst fetch = {\n    fetchTrendings,\n    fetchByKeyword,\n    fetchMovieDetails,\n    fetchCast,\n    fetchReviews,\n};\n\nexport default fetch;","import { useState, useEffect } from 'react'\nimport  fetch  from \"API/API\";\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'components/EditorList/EditorList';\n\nconst HomePage = () => {\n    const [films, setFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchTrendingFilms = async () => {\n            setLoading(true)\n            try {\n                const trendingFilms = await fetch.fetchTrendings()\n                setFilms(trendingFilms)\n            } catch (error) {\n                console.log(error)\n            } finally {\n                setLoading(false)\n            }\n        }\n        fetchTrendingFilms();\n    },[]);\n\n    return (\n        <main>\n            <h1>Trending today</h1>\n            {films && <EditorList films={films} />}\n            {loading && <Loader/>}\n        </main>\n    )\n}\n\nexport default HomePage;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films &&\n        films.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;","import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return <Vortex\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n}\n    \nexport default Loader;"],"names":["axios","API_KEY","fetchTrendings","response","data","results","fetchByKeyword","keyword","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","fetch","useState","films","setFilms","loading","setLoading","useEffect","fetchTrendingFilms","trendingFilms","console","log","location","useLocation","map","film","to","id","state","from","title","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}