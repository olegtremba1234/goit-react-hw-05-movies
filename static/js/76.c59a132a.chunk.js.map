{"version":3,"file":"static/js/76.c59a132a.chunk.js","mappings":"6KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAc,mCAAG,oGACIF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD5C,cACbE,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,qDAKdC,EAAc,mCAAG,WAAMC,GAAN,uFACIP,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,4DAA6FM,IADjG,cACbJ,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,sDAKdG,EAAiB,mCAAG,WAAMC,GAAN,uFACCT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKjBM,EAAS,mCAAG,WAAMD,GAAN,uFACST,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CR,EAA9C,oBADT,cACRE,EADQ,yBAEPA,EAASC,KAAKO,MAFP,2CAAH,sDAKTC,EAAY,mCAAG,WAAMH,GAAN,uFACKT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,4BAA8CR,EAA9C,2BADL,cACXE,EADW,yBAEVA,EAASC,KAAKC,SAFJ,2CAAH,sDAKZQ,EAAQ,CACVX,eAAAA,EACAI,eAAAA,EACAE,kBAAAA,EACAE,UAAAA,EACAE,aAAAA,GAGJ,K,sJCrCA,EAA+B,mCAA/B,EAA8E,gC,SC2E9E,EAtEqB,WAAO,IAAD,IACfH,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAkCM,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,2FACnBJ,GAAW,GADQ,kBAGWN,EAAAA,EAAAA,kBAAwBJ,GAHnC,OAGTe,EAHS,OAIfP,EAAaO,GAJE,gDAMfC,QAAQC,IAAR,MANe,yBAQfP,GAAW,GARI,4EAAH,qDAWpBI,GACH,GAAE,CAACd,KAGF,iCACE,SAAC,KAAD,CAAMkB,GAAE,iBAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAUQ,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,UACI,mBAAQC,KAAK,SAAb,uBAIHZ,IAAW,SAACa,EAAA,EAAD,IACXf,IACG,iBAAKgB,UAAWC,EAAhB,WACI,gBACIC,MAAM,QACNC,IAAK,kCAAoCnB,EAAUoB,YACnDC,IAAKrB,EAAUsB,kBAEnB,4BACI,0BACKtB,EAAUuB,MADf,KACwBvB,EAAUwB,aAAaC,MAAM,EAAG,GADxD,QAGA,wCAAgBzB,EAAU0B,eAC1B,sCACA,uBAAI1B,EAAU2B,YACd,oCACA,eAAIX,UAAWC,EAAf,SACKjB,EAAU4B,OAAOC,KAAI,SAAAC,GAAK,OACvB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADQ,aAO3C,mBACA,4BACI,oDACA,2BACI,yBACI,SAAC,KAAD,CAAMrB,GAAG,OAAOC,MAAO,CAACC,KAAMT,GAA9B,qBAEJ,yBACI,SAAC,KAAD,CAAMO,GAAG,UAAUC,MAAO,CAACC,KAAMT,GAAjC,2BAGR,mBACA,SAAC,KAAD,SAIX,C,4CC5DD,IAZe,WACX,OAAO,SAAC,KAAD,CACH6B,SAAS,EACTC,OAAO,KACPhB,MAAM,KACNiB,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAE5D,C","sources":["API/API.js","webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","components/Loader/Loader.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '4b8864cf5207c2132295f1e95f786e7c'\n\nconst fetchTrendings = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n};\n\nconst fetchByKeyword = async keyword => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\n    return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nconst fetchCast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n    const response =await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n};\n\nconst fetch = {\n    fetchTrendings,\n    fetchByKeyword,\n    fetchMovieDetails,\n    fetchCast,\n    fetchReviews,\n};\n\nexport default fetch;","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__eqthc\",\"genreList\":\"MovieDetails_genreList__d9HIM\"};","import { useState, useEffect } from \"react\";\nimport { useParams, Link, Outlet, useLocation  } from \"react-router-dom\";\nimport fetch from \"API/API\";\nimport Loader from \"components/Loader/Loader\";\nimport style from \"./MovieDetails.module.css\"\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieInfo, setMovieInfo] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const location = useLocation()\n\n    useEffect(() => {\n        const onDetailsMovie = async () => {\n            setLoading(true)\n            try {\n                const detailMovie = await fetch.fetchMovieDetails(movieId)\n                setMovieInfo(detailMovie)\n            }catch (error) {\n                console.log(error)\n            }finally {\n                setLoading(false)\n            }\n        }\n        onDetailsMovie()\n    }, [movieId])\n\n    return (\n      <>\n        <Link to={location?.state?.from ?? \"/\"}> \n            <button type=\"button\">\n                Go back\n            </button>\n        </Link>\n        {loading && <Loader />}\n        {movieInfo && (\n            <div className={style.movieDetails}>\n                <img \n                    width=\"300px\"\n                    src={'https://image.tmdb.org/t/p/w500' + movieInfo.poster_path}\n                    alt={movieInfo.original_title} \n                />\n                <div>\n                    <h1>\n                        {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n                    </h1>\n                    <p>User score: {movieInfo.popularity}</p>\n                    <h2>Overview</h2>\n                    <p>{movieInfo.overview}</p>\n                    <h2>Genres</h2>\n                    <ul className={style.genreList}>\n                        {movieInfo.genres.map(genre =>(\n                            <li key={genre.id}>{genre.name}</li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        )}\n        <hr />\n        <div>\n            <h3>Additional information</h3>\n            <ul>\n                <li>\n                    <Link to=\"cast\" state={{from: location}}>Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\" state={{from: location}}>Reviews</Link>\n                </li>\n            </ul>\n            <hr />\n            <Outlet/>\n        </div>\n      </>\n    )\n}\n\nexport default MovieDetails;","import { Vortex } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return <Vortex\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"vortex-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"vortex-wrapper\"\n        colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n}\n    \nexport default Loader;"],"names":["axios","API_KEY","fetchTrendings","response","data","results","fetchByKeyword","keyword","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","fetch","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","onDetailsMovie","detailMovie","console","log","to","state","from","type","Loader","className","style","width","src","poster_path","alt","original_title","title","release_date","slice","popularity","overview","genres","map","genre","name","id","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}